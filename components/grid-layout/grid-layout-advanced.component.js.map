{"version":3,"file":"grid-layout-advanced.component.js","sourceRoot":"","sources":["../../src/components/grid-layout/grid-layout-advanced.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {html} from 'lit';\nimport {styleMap} from 'lit/directives/style-map.js';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {\n  breakPoints as bp,\n  GridLayoutFoundation,\n  gap,\n  BreakPointMediaMatch,\n} from './foundation';\n\nimport {MediaMatch} from './media-match';\n\n@customElement('cwc-grid-layout-advanced')\nexport class GridLayoutAdvanced extends GridLayoutFoundation {\n  mediaMatch = new MediaMatch([\n    {\n      breakpoint: 'xs',\n      value: 4,\n      media: '(min-width: 0px) and (max-width: 719px)',\n    },\n    {\n      breakpoint: 'sm',\n      value: 4,\n      media: '(min-width: 720px) and (max-width: 1023px)',\n    },\n    {\n      breakpoint: 'md',\n      value: 8,\n      media: '(min-width: 1024px) and (max-width: 1279px)',\n    },\n    {\n      breakpoint: 'lg',\n      value: 12,\n      media: '(min-width: 1280px) and (max-width: 1919px)',\n    },\n    {\n      breakpoint: 'xl',\n      value: 12,\n      media: '(min-width: 1920px)',\n    },\n  ]);\n\n  @property()\n  columnBreakpoints = `{\"lg\": 1024}`;\n\n  @property()\n  gridTemplateColumns = ``;\n  @property()\n  gridAutoRows = `minmax(100px, auto)`;\n\n  @property()\n  gap: string = gap;\n\n  @property({type: Number})\n  rows = 1;\n\n  @property()\n  columnGap?: string;\n\n  @property()\n  rowGap?: string;\n\n  @property({type: Number})\n  columns = 12;\n\n  @property()\n  width = '100%';\n\n  @property()\n  gridTemplateAreas?: string;\n\n  points = bp;\n\n  constructor() {\n    super(bp);\n  }\n\n  mqls = [\n    // list of window.matchMedia() queries\n    window.matchMedia('(max-width: 1900px)'),\n    window.matchMedia('(max-width: 600px)'),\n    window.matchMedia('(max-height: 500px)'),\n  ];\n  \n  @state({\n    hasChanged(newVal: BreakPointMediaMatch, oldVal: BreakPointMediaMatch) {\n      return oldVal && newVal.media && oldVal.media !== newVal.media ? true : false;\n    }\n  })\n  breakPointMediaMatch: BreakPointMediaMatch = {\n    breakpoint: 'lg',\n    value: 12,\n    media: '(min-width: 1280px) and (max-width: 1919px)',\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    try {\n      this.points = JSON.parse(this.columnBreakpoints);\n    } catch (e) {\n      console.log(e);\n    }\n    this.mediaMatch.subscribe(this.fnc);\n  }\n\n  fnc = async (e: CustomEvent<BreakPointMediaMatch>) => {\n    this.breakPointMediaMatch = await e.detail;\n  };\n\n  get customStyles() {\n    const gridTemplateColumns = this.breakPointMediaMatch?.breakpoint\n      ? this.breakPointMediaMatch?.value\n      : 12;\n    return {\n      display: 'grid',\n      // overrides CSS media queries\n      'grid-template-columns': this.frGetter(gridTemplateColumns),\n      width: this.width,\n      gap: this.gap,\n      rowGap: this.rowGap ? this.rowGap : null,\n      columnGap: this.columnGap ? this.columnGap : null,\n      'grid-auto-rows': this.gridAutoRows,\n      background: '#efefef',\n    };\n  }\n\n  override render() {\n    return html`\n      ${(this.breakPointMediaMatch?.media as MediaQueryList).media}\n      ${this.breakPointMediaMatch?.breakpoint}\n      ${this.breakPointMediaMatch?.value}\n\n      <div class=\"cwc-grid\" style=${styleMap(this.customStyles)}><slot></slot></div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cwc-grid-layout-advanced': GridLayoutAdvanced;\n  }\n}"]}