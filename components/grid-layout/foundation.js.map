{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../../src/components/grid-layout/foundation.ts"],"names":[],"mappings":"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","sourcesContent":["import { CSSResultGroup, LitElement } from \"lit\";\n\nexport type BreakPointKeys = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n\nexport type BreakPointValues = { [key in BreakPointKeys]: number };\n\nexport interface BreakPointMediaMatch {\n  breakpoint: BreakPointKeys;\n  value: number;\n  media: MediaQueryList | string;\n}\n\nexport type BreakPointMediaQueries = {\n  [key in BreakPointKeys]: BreakPointMediaMatch;\n};\n\nexport const breakPoints: BreakPointValues = {\n    xs: 0,\n    sm: 720,\n    md: 1024,\n    lg: 1280,\n    xl: 1920,\n};\n\nexport const breakColumns: BreakPointValues = {\n    xs: 4,\n    sm: 4,\n    md: 8,\n    lg: 12,\n    xl: 12,\n  };\n  \nexport const breakPointMediaQueries: BreakPointMediaMatch[] = [\n  {\n    breakpoint: \"xs\",\n    value: breakColumns.xs,\n    media: window.matchMedia(`(min-width: max-width(${breakPoints.xs}px) and (max-width: ${breakPoints.sm - 1}px)`),\n  },\n  {\n    breakpoint: \"sm\",\n    value: breakColumns.sm,\n    media: window.matchMedia(`(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md - 1}px)`),\n  },\n  {\n    breakpoint: \"md\",\n    value: breakColumns.md,\n    media: window.matchMedia(`(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg - 1}px)`),\n  },\n  {\n    breakpoint: \"lg\",\n    value: breakColumns.lg,\n    media: window.matchMedia(`(min-width: ${breakPoints.lg}px) and (max-width: ${breakPoints.xl - 1}px)`)\n  },\n  {\n    breakpoint: \"xl\",\n    value: breakColumns.xl,\n    media: window.matchMedia(`min-width(${breakPoints.xl}px)`),\n  },\n];\n\nexport const gap = \"20px\";\n\nexport class GridLayoutFoundation extends LitElement {\n  breakPoints: BreakPointValues;\n\n  constructor(breakPoints: BreakPointValues) {\n    super();\n    this.breakPoints = breakPoints;\n  }\n\n  up = (BreakPointKey: BreakPointKeys) => {\n    //   console.log(this.breakPoints)\n    return `@media (min-width: ${this.breakPoints[BreakPointKey]}px)`;\n  };\n  down = (BreakPointKey: BreakPointKeys) => {\n    return `@media (max-width: ${this.breakPoints[BreakPointKey]}px)`;\n  };\n\n  frGetter = (value: number | CSSResultGroup) : string =>\n    typeof value === \"number\" ? `repeat(${value}, 1fr)` : `${value}`;\n\n  getBreakPoints = (\n    columnsBreakpoints: BreakPointValues,\n    columnGap: BreakPointValues,\n    rowGap: BreakPointValues\n  ) => {\n    return `${this.up(\"xs\")} {\n              column-gap: ${`${columnGap.xs}px`};\n              grid-template-columns: ${frGetter(columnsBreakpoints.xs)};\n              row-gap: ${`${rowGap.xs}px`};\n            }\n            ${this.up(\"sm\")} {\n              column-gap: ${`${columnGap.sm}px`};\n              grid-template-columns: ${frGetter(columnsBreakpoints.sm)};\n              row-gap: ${`${rowGap.sm}px`};\n            }\n            ${this.up(\"md\")} {\n              column-gap: ${`${columnGap.md}px`};\n              grid-template-columns: ${frGetter(columnsBreakpoints.md)};\n              row-gap: ${`${rowGap.md}px`};\n            }\n            ${this.up(\"lg\")} {\n              column-gap: ${`${columnGap.lg}px`};\n              grid-template-columns: ${frGetter(columnsBreakpoints.lg)};\n              row-gap: ${`${rowGap.lg}px`};\n            }\n            ${this.up(\"xl\")} {\n              column-gap: ${`${columnGap.xl}px`};\n              grid-template-columns: ${frGetter(columnsBreakpoints.lg)};\n              row-gap: ${`${rowGap.xl}px`};\n            }`;\n  };\n}\n\nexport const frGetter = (value: number | CSSResultGroup) =>\n  typeof value === \"number\" ? `repeat(${value}, 1fr)` : value;\n"]}