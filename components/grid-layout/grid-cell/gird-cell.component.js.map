{"version":3,"file":"gird-cell.component.js","sourceRoot":"","sources":["../../../src/components/grid-layout/grid-cell/gird-cell.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {css, html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {BreakPointMediaMatch} from '../foundation';\nimport {GridLayoutAdvanced} from '../grid-layout-advanced.component';\nimport {MediaMatch} from '../media-match';\nimport {Placement, getCellPositionString} from './foundation';\n\n@customElement('cwc-grid-cell')\nexport class GridCell extends LitElement {\n  @property({type: String})\n  /**\n   * row start / column start / row end / column end\n   */\n  default = 'auto / auto / auto / auto';\n\n  @property({type: String})\n  // Required default propery. Use if no other CellSize is defined\n  xs?: string;\n\n  @property({type: String})\n  sm?: string;\n\n  @property({type: String})\n  md?: string;\n\n  @property({type: String})\n  lg?: string;\n\n  @property({type: String})\n  xl?: string;\n\n  xsRow?: string;\n\n  @property({type: String})\n  smRow?: string;\n\n  @property({type: String})\n  mdRow?: string;\n\n  @property({type: String})\n  lgRow?: string;\n\n  @property({type: String})\n  xlRow?: string;\n\n  @property()\n  height = '100%';\n\n  @property()\n  rowStart?: string | number;\n\n  @property()\n  justifyContent: Placement = 'center';\n\n  @property()\n  alignItems: Placement = 'center';\n\n  mediaMatch = new MediaMatch();\n\n  breakPointEvent?: BreakPointMediaMatch;\n\n  cellSize?: string;\n\n  constructor() {\n    super();\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.mediaMatch.subscribe(this.fnc);\n    this.style.gridArea = `${this.default}`;\n    this.style.justifyContent = `${this.justifyContent}`;\n    this.style.alignItems = `${this.alignItems}`;\n    this.updateStyles();\n  }\n\n  updateStyles = () => {\n\n    if (this.xs) {\n        this.default = this.xs;\n    }\n    if (this.sm) {\n        this.default = this.sm;\n    }\n    if (this.md) {\n        this.default = this.md;\n    }\n    if (this.lg) {\n        this.default = this.lg;\n    }\n\n    this.cellSize = getCellPositionString(\n      {\n        xs: this.xs ? this.xs : this.default,\n        sm: this.sm ? this.sm : this.default,\n        md: this.md ? this.md : this.default,\n        lg: this.lg ? this.lg : this.default,\n        xl: this.xl ? this.xl : this.default,\n      },\n      this.breakPointEvent\n    );\n\n    const cellPositionLength = this.cellSize.split('/').length;\n\n    if (cellPositionLength > 2) {\n      this.style.gridArea = this.cellSize;\n    } else {\n      this.style.gridColumn = this.cellSize;\n      this.style.gridRow = 'auto / auto';\n    }\n\n    this.style.justifyContent = `${this.justifyContent}`;\n    this.style.alignItems = `${this.alignItems}`;\n  };\n\n  fnc = (e: CustomEvent<BreakPointMediaMatch>) => {\n    this.breakPointEvent = e.detail;\n    this.updateStyles();\n    this.requestUpdate();\n  };\n\n  static override get styles() {\n    return css`\n      :host {\n        min-width: 0;\n        box-sizing: border-box;\n        grid-column-start: var(--columnStart);\n        grid-column-start: var(--columnEnd);\n        justify-self: stretch;\n        display: inline-flex;\n        flex-flow: column wrap;\n      }\n    `;\n  }\n\n  override render() {\n    return html` <div class=\"cwc-grid-cell\"><slot></slot></div> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cwc-grid-cell': GridLayoutAdvanced;\n  }\n}\n"]}