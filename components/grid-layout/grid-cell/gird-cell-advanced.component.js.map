{"version":3,"file":"gird-cell-advanced.component.js","sourceRoot":"","sources":["../../../src/components/grid-layout/grid-cell/gird-cell-advanced.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\nimport { BreakPointMediaMatch } from \"../foundation\";\nimport { GridLayoutAdvanced } from \"../grid-layout-advanced.component\";\nimport { MediaMatch } from '../media-match';\nimport { CellSize, getCellCPosition, Placement } from \"./foundation\";\n\n@customElement('cwc-grid-cell-advanced') \nexport class GridCellAdvanced extends LitElement {\n\n    @property({ type: Object })\n    // Required default propery. Use if no other CellSize is defined\n    default: CellSize = {start: 'auto', end: 'auto'};\n\n    @property({ type: Object })\n    // Required default propery. Use if no other CellSize is defined\n    xs?: CellSize;\n\n    @property({ type: Object })\n    sm?: CellSize;\n\n    @property({ type: Object })\n    md?: CellSize;\n\n    @property({ type: Object })\n    lg?: CellSize;\n\n    @property({ type: Object })\n    xl?: CellSize;\n\n    @property()\n    height = '100%';\n\n    @property()\n    rowStart?: string | number;\n\n    @property()\n    justifyContent: Placement = 'center';\n\n    @property()\n    alignItems: Placement = 'center';\n\n    mediaMatch = new MediaMatch();\n\n    breakPointEvent?: BreakPointMediaMatch;\n\n    cellSize?: CellSize;\n\n    constructor() {\n        super();\n    }\n\n    override connectedCallback(): void {\n        super.connectedCallback();\n        this.mediaMatch.subscribe(this.fnc);\n            this.style.gridColumnStart = `${this.default.start}`;\n            this.style.gridColumnEnd = `${this.default.end}`;\n            this.style.justifyContent = `${this.justifyContent}`;\n            this.style.alignItems = `${this.alignItems}`;\n        this.updateStyles();\n    }\n\n    updateStyles = () => {\n        this.cellSize = getCellCPosition(\n            {\n                xs: this.xs ? this.xs : this.default,\n                sm: this.sm ? this.sm : this.default,\n                md: this.md ? this.md : this.default,\n                lg: this.lg ? this.lg : this.default,\n                xl: this.xl ? this.xl : this.default},\n                this.breakPointEvent);\n        this.style.gridColumnStart = `${this.cellSize.start}`;\n        this.style.gridColumnEnd = `${this.cellSize.end}`;\n        this.style.gridRowStart = `${this.cellSize.row?.start}`;\n        this.style.gridRowEnd = `${this.cellSize.row?.end}`;\n        this.style.justifyContent = `${this.justifyContent}`;\n        this.style.alignItems = `${this.alignItems}`;\n    }\n\n     fnc = (e: CustomEvent<BreakPointMediaMatch>)=>{\n        this.breakPointEvent = e.detail;\n        this.updateStyles();\n        this.requestUpdate();\n    }\n\n    setDefaultCellSize = (): CellSize  => {\n        const grid: GridLayoutAdvanced | null = this.closest('cwc-grid-layout-advanced');\n        if (grid) {\n            return {\n                ...this.default,\n                end: grid.columns + 1\n            }\n        }\n        return this.default;\n    }\n\n    static override get styles() {\n        return css`\n        :host {\n            background: pink;\n            min-width: 0;\n            box-sizing: border-box;\n            grid-column-start: var(--columnStart);\n            grid-column-start: var(--columnEnd);\n            justify-self: stretch;\n            display: inline-flex;\n            flex-flow: column wrap;\n\n        }`\n    }\n\n    override render() {\n    return html`\n    <div class=\"cwc-grid-cell\"><slot></slot></div>\n    `;\n    }\n\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n      'cwc-grid-cell-advanced': GridLayoutAdvanced;\n    }\n  }"]}