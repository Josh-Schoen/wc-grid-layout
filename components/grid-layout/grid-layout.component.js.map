{"version":3,"file":"grid-layout.component.js","sourceRoot":"","sources":["../../src/components/grid-layout/grid-layout.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAChC,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,WAAW,IAAI,EAAE,EAAE,oBAAoB,EAAE,GAAG,GAAG,MAAM,cAAc,CAAC;AAG7E,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,oBAAoB;IAqChD;QACI,KAAK,CAAC,EAAE,CAAC,CAAC;QApClB,yCAAyC;QACzC,mCAAmC;QACnC,IAAI;QAGA,sBAAiB,GAAG,cAAc,CAAC;QAGnC,wBAAmB,GAAG,EAAE,CAAC;QAEzB,iBAAY,GAAG,oBAAoB,CAAC;QAGpC,QAAG,GAAW,GAAG,CAAC;QAGlB,SAAI,GAAG,CAAC,CAAC;QAST,YAAO,GAAoB,EAAE,CAAC;QAG9B,UAAK,GAAG,MAAM,CAAC;QAKf,WAAM,GAAG,EAAE,CAAC;QAuCZ,SAAI,GAAG;YACH,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACxC,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC;SAC3C,CAAA;IAvCD,CAAC;IAyCQ,iBAAiB;QACtB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI;YACA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACpD;QAAC,OAAM,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;SACjB;IACL,CAAC;IAEQ,wBAAwB,CAAC,IAAW,EAAE,IAAY,EAAE,KAAoB;QAC7E,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI;YACA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC7D;QAAC,OAAM,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;SACjB;QACD,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAEQ,MAAM;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACxB,MAAM,KAAK,GAAG;YACV,OAAO,EAAE,MAAM;YACf,KAAK,EAAE,MAAM;YACb,8BAA8B;YAC9B,uBAAuB,EAAE,IAAI,CAAC,mBAAmB;YACjD,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;YACxC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;YACjD,gBAAgB,EAAE,IAAI,CAAC,YAAY;YACnC,UAAU,EAAE,SAAS;YACrB,gDAAgD;SACjD,CAAC;QACJ,mCAAmC;QACnC,yHAAyH;QACzH,OAAO,IAAI,CAAA,+BAA+B,QAAQ,CAAC,KAAK,CAAC;SACxD,CAAA;IACL,CAAC;CAEJ,CAAA;AAjFmB,iBAAM,GAAG,GAAG,CAAA;;;;;;yBAMP,EAAE,CAAC,EAAE;;;;;yBAKL,EAAE,CAAC,EAAE;;;;;yBAKL,EAAE,CAAC,EAAE;;;;;yBAKL,EAAE,CAAC,EAAE;;;;;6BAKD,EAAE,CAAC,EAAE;;;;;KAK5B,CAAA;AAjEF;IADC,QAAQ,EAAE;qDACwB;AAGnC;IADC,QAAQ,EAAE;uDACc;AAEzB;IADC,QAAQ,EAAE;gDACyB;AAGpC;IADC,QAAQ,EAAE;uCACO;AAGlB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;wCAChB;AAGT;IADC,QAAQ,EAAE;6CACQ;AAGnB;IADC,QAAQ,EAAE;0CACK;AAGhB;IADC,QAAQ,EAAE;2CACmB;AAG9B;IADC,QAAQ,EAAE;yCACI;AAGf;IADC,QAAQ,EAAE;qDACgB;AAjClB,UAAU;IADtB,aAAa,CAAC,iBAAiB,CAAC;GACpB,UAAU,CA0HtB;SA1HY,UAAU","sourcesContent":["import { css, html } from \"lit\";\nimport {styleMap} from 'lit/directives/style-map.js';\nimport { customElement, property } from \"lit/decorators.js\";\nimport { breakPoints as bp, GridLayoutFoundation, gap, } from \"./foundation\";\n\n@customElement('cwc-grid-layout') \nexport class GridLayout extends GridLayoutFoundation {\n\n//     static override get properties() {\n//         return columnBreakpoints\n// }\n    \n    @property()\n    columnBreakpoints = `{\"lg\": 1024}`;\n\n    @property()\n    gridTemplateColumns = ``;\n    @property()\n    gridAutoRows = `minmax(10px, auto)`;\n    \n    @property()\n    gap: string = gap;\n\n    @property({type: Number})\n    rows = 1;\n\n    @property()\n    columnGap?: string;\n\n    @property()\n    rowGap?: string;\n\n    @property()\n    columns: number | string = 12;\n\n    @property()\n    width = '100%';\n\n    @property()\n    gridTemplateAreas?: string;\n\n    points = bp;\n\n    constructor() {\n        super(bp);\n    }\n\n    static override styles = css`\n    :host {\n        color: blue;\n        display: flex;\n        width: 100%;\n    }\n    @media (min-width: ${bp.xs}px) {\n        .cwc-grid {\n            grid-template-columns: var(--xs);\n        }\n    }\n    @media (min-width: ${bp.sm}px) {\n        .cwc-grid {\n            grid-template-columns: var(--sm);\n        }\n    }\n    @media (min-width: ${bp.md}px) {\n        .cwc-grid {\n            grid-template-columns: var(--md);\n        }\n    }\n    @media (min-width: ${bp.lg}px) {\n        .cwc-grid {\n            grid-template-columns: var(--lg);\n        }\n    }\n        @media (min-width: ${bp.xl}px) {\n            .cwc-grid {\n                grid-template-columns: var(--xl);\n            }\n    }\n    `;\n    \n    mqls = [ // list of window.matchMedia() queries\n        window.matchMedia(\"(max-width: 1900px)\"),\n        window.matchMedia(\"(max-width: 600px)\"),\n        window.matchMedia(\"(max-height: 500px)\")\n    ]\n\n    override connectedCallback(): void {\n        super.connectedCallback();\n\n        try {\n            this.points = JSON.parse(this.columnBreakpoints);\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    override attributeChangedCallback(name:string, _old: string, value: string | null): void {\n        console.log(value);\n        try {\n            this.columnBreakpoints = JSON.parse(value ? value : _old);\n        } catch(e) {\n            console.log(e)\n        }\n        super.attributeChangedCallback(name, _old, value);\n        console.log(this.points);\n    }\n\n    override render() {\n        console.log(this.rowGap)\n        const style = {\n            display: 'grid',\n            color: 'blue',\n            // overrides CSS media queries\n            'grid-template-columns': this.gridTemplateColumns,\n            width: this.width,\n            gap: this.gap,\n            rowGap: this.rowGap ? this.rowGap : null,\n            columnGap: this.columnGap ? this.columnGap : null,\n            'grid-auto-rows': this.gridAutoRows,\n            background: '#efefef',\n            // 'grid-template-areas': this.gridTemplateAreas\n          };\n        // const width = window.innerWidth;\n        // const classes = {lg: this.breakPoints.lg >= width, md: this.breakPoints.md >= width, sm: this.breakPoints.sm <= width}\n        return html`<div class=\"cwc-grid\" style=${styleMap(style)}><slot></slot></div>\n        `\n    }\n\n}"]}